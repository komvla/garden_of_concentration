{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container grid grid-cols-1 gap-4 justify-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"\"\n};\nconst _hoisted_3 = {\n  class: \"img-wrapper\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_content = _resolveComponent(\"v-card-content\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createBlock(_component_v_card, {\n    class: \"mx-auto my-10\",\n    \"max-width\": \"600\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h3\", _hoisted_2, _toDisplayString(_ctx.plantInfo.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      class: \"h-64\",\n      src: require(`@/assets/${_ctx.plantInfo.type}.png`)\n    }, null, 8 /* PROPS */, _hoisted_4)]), _createVNode(_component_v_card_content, null, {\n      default: _withCtx(() => [_createElementVNode(\"button\", {\n        ref: \"startBtn\",\n        onMouseover: _cache[0] || (_cache[0] = (...args) => _ctx.startTimer && _ctx.startTimer(...args)),\n        onMouseout: _cache[1] || (_cache[1] = (...args) => _ctx.resetTimer && _ctx.resetTimer(...args))\n      }, \"Start\", 544 /* HYDRATE_EVENTS, NEED_PATCH */), _createElementVNode(\"div\", null, \"Time left: \" + _toDisplayString(_ctx.timeLeft) + \"s\", 1 /* TEXT */), _ctx.isWin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"You win!\")) : _ctx.isLose ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"You lose!\")) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;EAKSA,KAAK,EAAC;AAAwD;;EAC/DA,KAAK,EAAC;AAAE;;EACPA,KAAK,EAAC;AAAa;;;;;;;;;;;uBANxBC,aAiBSC;IAhBTF,KAAK,EAAC,eAAgB;IACtB,WAAS,EAAC;;sBAEV,MAWM,CAXNG,oBAWM,OAXNC,UAWM,GAVND,oBAAoC,MAApCE,UAAoC,mBAArBC,cAAS,CAACC,IAAI,kBAC7BJ,oBAEM,OAFNK,UAEM,GADNL,oBAAsE;MAAjEH,KAAK,EAAC,MAAO;MAAES,GAAG,EAAEC,OAAO,aAAaJ,cAAS,CAACK,IAAI;2CAE3DC,aAKiBC;wBAJjB,MAAoF,CAApFV,oBAAoF;QAA5EW,GAAG,EAAC,UAAU;QAAEC,WAAS,yCAAET,2CAAU;QAAGU,UAAQ,yCAAEV,2CAAU;SAAE,OAAK,yCAC3EH,oBAAqC,aAAhC,aAAW,oBAAGG,aAAQ,IAAG,GAAC,iBACpBA,UAAK,kBAAhBW,oBAAgC,mBAAd,UAAQ,KACVX,WAAM,kBAAtBW,oBAAuC,mBAAf,WAAS","names":["class","_createBlock","_component_v_card","_createElementVNode","_hoisted_1","_hoisted_2","_ctx","name","_hoisted_3","src","require","type","_createVNode","_component_v_card_content","ref","onMouseover","onMouseout","_createElementBlock"],"sourceRoot":"","sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/components/pages/GrowSpot.vue"],"sourcesContent":["<template>\n    <v-card     \n    class=\"mx-auto my-10 \"\n    max-width=\"600\"\n    >\n    <div class=\"container grid grid-cols-1 gap-4  justify-items-center\">\n    <h3 class=\"\">{{plantInfo.name}}</h3>\n    <div class=\"img-wrapper\">\n    <img class=\" h-64\" :src=\"require(`@/assets/${plantInfo.type}.png`)\" />\n    </div>\n    <v-card-content>\n    <button ref=\"startBtn\" @mouseover=\"startTimer\" @mouseout=\"resetTimer\">Start</button>\n    <div>Time left: {{ timeLeft }}s</div>\n    <div v-if=\"isWin\">You win!</div>\n    <div v-else-if=\"isLose\">You lose!</div>\n    </v-card-content>\n    </div>\n\n    </v-card>\n</template>\n<script>\n\nimport { defineComponent, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\n\n\nexport default defineComponent({\n\n  setup() {\n    // plant info\n    const route = useRoute();\n    const store = useStore();\n\n    const plantType = route.params.type;\n    \n    const plantInfo = store.state.typesPlants.find(item => item.type === plantType);\n\n    // timer functionality \n\n    const timeLimit = 5; // time limit in seconds\n    const timer = ref(null);\n    const timeLeft = ref(timeLimit);\n    const isWin = ref(false);\n    const isLose = ref(false);\n\n    const startTimer = () => {\n      timeLeft.value = timeLimit;\n      isWin.value = false;\n      isLose.value = false;\n      clearInterval(timer.value);\n      timer.value = setInterval(() => {\n        timeLeft.value--;\n        if (timeLeft.value === 0) {\n          clearInterval(timer.value);\n          if (this.$refs.startBtn.matches(':hover')) {\n            isWin.value = true;\n          } else {\n            isLose.value = true;\n          }\n        }\n      }, 1000);\n    };\n\n    const resetTimer = () => {\n      clearInterval(timer.value);\n      timeLeft.value = timeLimit;\n      isWin.value = false;\n      isLose.value = false;\n    };\n    return { \n      plantInfo, \n      plantType, \n      timeLeft,\n      isWin,\n      isLose,\n      startTimer,\n      resetTimer,\n    };\n  },\n}) \n\n</script>\n<style scoped>\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}