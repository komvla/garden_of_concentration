{"ast":null,"code":"import { defineComponent, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nexport default defineComponent({\n  setup() {\n    // plant info\n    const route = useRoute();\n    const store = useStore();\n    const plantType = route.params.type;\n    const plantInfo = store.state.typesPlants.find(item => item.type === plantType);\n\n    // timer functionality \n\n    const timeLimit = 5; // time limit in seconds\n    const timer = ref(null);\n    const timeLeft = ref(timeLimit);\n    const isWin = ref(false);\n    const isLose = ref(false);\n    const startTimer = () => {\n      timeLeft.value = timeLimit;\n      isWin.value = false;\n      isLose.value = false;\n      clearInterval(timer.value);\n      timer.value = setInterval(() => {\n        timeLeft.value--;\n        if (timeLeft.value === 0) {\n          clearInterval(timer.value);\n          if (this.$refs.startBtn.matches(':hover')) {\n            isWin.value = true;\n          } else {\n            isLose.value = true;\n          }\n        }\n      }, 1000);\n    };\n    const resetTimer = () => {\n      clearInterval(timer.value);\n      timeLeft.value = timeLimit;\n      isWin.value = false;\n      isLose.value = false;\n    };\n    return {\n      plantInfo,\n      plantType,\n      timeLeft,\n      isWin,\n      isLose,\n      startTimer,\n      resetTimer\n    };\n  }\n});","map":{"version":3,"mappings":"AAoBA,SAASA,eAAe,EAAEC,GAAE,QAAS,KAAK;AAC1C,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,QAAO,QAAS,MAAM;AAG/B,eAAeH,eAAe,CAAC;EAE7BI,KAAK,GAAG;IACN;IACA,MAAMC,KAAI,GAAIH,QAAQ,EAAE;IACxB,MAAMI,KAAI,GAAIH,QAAQ,EAAE;IAExB,MAAMI,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAACC,IAAI;IAEnC,MAAMC,SAAQ,GAAIJ,KAAK,CAACK,KAAK,CAACC,WAAW,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACL,IAAG,KAAMF,SAAS,CAAC;;IAE/E;;IAEA,MAAMQ,SAAQ,GAAI,CAAC,EAAE;IACrB,MAAMC,KAAI,GAAIf,GAAG,CAAC,IAAI,CAAC;IACvB,MAAMgB,QAAO,GAAIhB,GAAG,CAACc,SAAS,CAAC;IAC/B,MAAMG,KAAI,GAAIjB,GAAG,CAAC,KAAK,CAAC;IACxB,MAAMkB,MAAK,GAAIlB,GAAG,CAAC,KAAK,CAAC;IAEzB,MAAMmB,UAAS,GAAI,MAAM;MACvBH,QAAQ,CAACI,KAAI,GAAIN,SAAS;MAC1BG,KAAK,CAACG,KAAI,GAAI,KAAK;MACnBF,MAAM,CAACE,KAAI,GAAI,KAAK;MACpBC,aAAa,CAACN,KAAK,CAACK,KAAK,CAAC;MAC1BL,KAAK,CAACK,KAAI,GAAIE,WAAW,CAAC,MAAM;QAC9BN,QAAQ,CAACI,KAAK,EAAE;QAChB,IAAIJ,QAAQ,CAACI,KAAI,KAAM,CAAC,EAAE;UACxBC,aAAa,CAACN,KAAK,CAACK,KAAK,CAAC;UAC1B,IAAI,IAAI,CAACG,KAAK,CAACC,QAAQ,CAACC,OAAO,CAAC,QAAQ,CAAC,EAAE;YACzCR,KAAK,CAACG,KAAI,GAAI,IAAI;UACpB,OAAO;YACLF,MAAM,CAACE,KAAI,GAAI,IAAI;UACrB;QACF;MACF,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAED,MAAMM,UAAS,GAAI,MAAM;MACvBL,aAAa,CAACN,KAAK,CAACK,KAAK,CAAC;MAC1BJ,QAAQ,CAACI,KAAI,GAAIN,SAAS;MAC1BG,KAAK,CAACG,KAAI,GAAI,KAAK;MACnBF,MAAM,CAACE,KAAI,GAAI,KAAK;IACtB,CAAC;IACD,OAAO;MACLX,SAAS;MACTH,SAAS;MACTU,QAAQ;MACRC,KAAK;MACLC,MAAM;MACNC,UAAU;MACVO;IACF,CAAC;EACH;AACF,CAAC","names":["defineComponent","ref","useRoute","useStore","setup","route","store","plantType","params","type","plantInfo","state","typesPlants","find","item","timeLimit","timer","timeLeft","isWin","isLose","startTimer","value","clearInterval","setInterval","$refs","startBtn","matches","resetTimer"],"sourceRoot":"","sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/components/pages/GrowSpot.vue"],"sourcesContent":["<template>\n    <v-card     \n    class=\"mx-auto my-10 \"\n    max-width=\"600\"\n    >\n    <div class=\"container grid grid-cols-1 gap-4  justify-items-center\">\n    <h3 class=\"\">{{plantInfo.name}}</h3>\n    <div class=\"img-wrapper\">\n    <img class=\" h-64\" :src=\"require(`@/assets/${plantInfo.type}.png`)\" />\n    </div>\n    <v-card-content>\n    <button @mousedown=\"startTimer\" @mouseleave=\"resetTimer\" @mouseenter=\"showButton\">Start</button>\n    <div>{{ message }}</div>\n    </v-card-content>\n    </div>\n\n    </v-card>\n</template>\n<script>\n\nimport { defineComponent, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\n\n\nexport default defineComponent({\n\n  setup() {\n    // plant info\n    const route = useRoute();\n    const store = useStore();\n\n    const plantType = route.params.type;\n    \n    const plantInfo = store.state.typesPlants.find(item => item.type === plantType);\n\n    // timer functionality \n\n    const timeLimit = 5; // time limit in seconds\n    const timer = ref(null);\n    const timeLeft = ref(timeLimit);\n    const isWin = ref(false);\n    const isLose = ref(false);\n\n    const startTimer = () => {\n      timeLeft.value = timeLimit;\n      isWin.value = false;\n      isLose.value = false;\n      clearInterval(timer.value);\n      timer.value = setInterval(() => {\n        timeLeft.value--;\n        if (timeLeft.value === 0) {\n          clearInterval(timer.value);\n          if (this.$refs.startBtn.matches(':hover')) {\n            isWin.value = true;\n          } else {\n            isLose.value = true;\n          }\n        }\n      }, 1000);\n    };\n\n    const resetTimer = () => {\n      clearInterval(timer.value);\n      timeLeft.value = timeLimit;\n      isWin.value = false;\n      isLose.value = false;\n    };\n    return { \n      plantInfo, \n      plantType, \n      timeLeft,\n      isWin,\n      isLose,\n      startTimer,\n      resetTimer,\n    };\n  },\n}) \n\n</script>\n<style scoped>\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}