{"ast":null,"code":"import { toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"button\", {\n    col: \"\",\n    lg: \"4\",\n    class: _normalizeClass(_ctx.buttonClasses)\n  }, _toDisplayString(_ctx.buttonText), 3 /* TEXT, CLASS */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAAmE;IAA3DC,GAAG,EAAH,EAAG;IAACC,EAAE,EAAC,GAAG;IAAEC,KAAK,kBAAEC,kBAAa;sBAAKA,eAAU","names":["_createElementBlock","col","lg","class","_ctx"],"sourceRoot":"","sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/components/common/ButtonField.vue"],"sourcesContent":["<template>\n  <button col lg=\"4\" :class=\"buttonClasses\">{{ buttonText }}</button>\n</template>\n\n<script>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  props: {\n    type: {\n      type: String,\n      default: 'empty'\n    }\n  },\n  setup(props) {\n    const buttonText = props.type !== 'empty' ? props.type : 'empty';\n    const buttonClasses = [\n      props.type !== 'empty' ? 'filled' : 'empty',\n      props.idx % 5 === 0 ? 'break' : '',\n    ];\n    return { buttonClasses, buttonText };\n  }\n});\n\n</script>\n\n<style scoped>\nbutton {\n  height: 10vw;\n  width: 10vw;\n  border-radius: 50rem;\n  margin: 3rem;\n  border: none;\n  cursor: pointer;\n}\n\n.empty {\n    background: #584545;\n}\n\n.filled {\n    background: #426d26;\n}\n\n.break {\n    flex-basis: 100%;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}