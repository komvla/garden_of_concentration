{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container grid grid-cols-1 gap-4 justify-items-center\"\n};\nconst _hoisted_2 = {\n  class: \"\"\n};\nconst _hoisted_3 = {\n  class: \"img-wrapper\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  ref: \"button\",\n  class: \"px-6 py-3 bg-green-500 text-white rounded-lg m-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card_content = _resolveComponent(\"v-card-content\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  return _openBlock(), _createBlock(_component_v_card, {\n    class: \"mx-auto my-10\",\n    \"max-width\": \"600\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"h3\", _hoisted_2, _toDisplayString(_ctx.plantInfo.name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n      class: \"h-64\",\n      src: require(`@/assets/${_ctx.plantInfo.type}.png`)\n    }, null, 8 /* PROPS */, _hoisted_4)]), _createVNode(_component_v_card_content, null, {\n      default: _withCtx(() => [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n        ref: \"button\",\n        class: \"px-6 py-3 bg-green-500 text-white rounded-lg m-2\",\n        onMouseover: _cache[0] || (_cache[0] = (...args) => _ctx.startTimer && _ctx.startTimer(...args)),\n        onMouseout: _cache[1] || (_cache[1] = (...args) => _ctx.stopTimer && _ctx.stopTimer(...args))\n      }, _toDisplayString(_ctx.buttonText), 545 /* TEXT, HYDRATE_EVENTS, NEED_PATCH */), _ctx.showTryAgain ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        class: \"ml-2 px-6 py-3 bg-red-500 text-white rounded-lg m-2\",\n        onClick: _cache[2] || (_cache[2] = (...args) => _ctx.resetGame && _ctx.resetGame(...args))\n      }, \" Try Again \")) : _createCommentVNode(\"v-if\", true), _ctx.showButtonPlaceAPlant ? (_openBlock(), _createElementBlock(\"button\", _hoisted_6, \" Place a plant \", 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true)])])]),\n      _: 1 /* STABLE */\n    })])]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;EAKSA,KAAK,EAAC;AAAwD;;EAC/DA,KAAK,EAAC;AAAE;;EACPA,KAAK,EAAC;AAAa;;;EAKnBA,KAAK,EAAC;AAAa;;;EAiBpBC,GAAG,EAAC,QAAQ;EACZD,KAAK,EAAC;;;;;uBA7BVE,aAyCSC;IAxCTH,KAAK,EAAC,eAAgB;IACtB,WAAS,EAAC;;sBAEV,MAmCM,CAnCNI,oBAmCM,OAnCNC,UAmCM,GAlCND,oBAAoC,MAApCE,UAAoC,mBAArBC,cAAS,CAACC,IAAI,kBAC7BJ,oBAEM,OAFNK,UAEM,GADNL,oBAAsE;MAAjEJ,KAAK,EAAC,MAAO;MAAEU,GAAG,EAAEC,OAAO,aAAaJ,cAAS,CAACK,IAAI;2CAE3DC,aA6BiBC;wBA5BnB,MA2BM,CA3BNV,oBA2BM,cA1BJA,oBAwBM,OAxBNW,UAwBM,GAvBJX,oBAOS;QANPH,GAAG,EAAC,QAAQ;QACZD,KAAK,EAAC,kDAAkD;QACvDgB,WAAS,yCAAET,2CAAU;QACrBU,UAAQ,yCAAEV,yCAAS;0BAEjBA,eAAU,gDAIPA,iBAAY,kBAFpBW,oBAMS;;QALPlB,KAAK,EAAC,qDAAqD;QAE1DmB,OAAK,yCAAEZ,yCAAS;SAClB,aAED,wCAIQA,0BAAqB,kBAH7BW,oBAMS,UANTE,UAMS,EAFR,iBAED","names":["class","ref","_createBlock","_component_v_card","_createElementVNode","_hoisted_1","_hoisted_2","_ctx","name","_hoisted_3","src","require","type","_createVNode","_component_v_card_content","_hoisted_5","onMouseover","onMouseout","_createElementBlock","onClick","_hoisted_6"],"sourceRoot":"","sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/components/pages/GrowSpot.vue"],"sourcesContent":["<template>\n    <v-card     \n    class=\"mx-auto my-10 \"\n    max-width=\"600\"\n    >\n    <div class=\"container grid grid-cols-1 gap-4  justify-items-center\">\n    <h3 class=\"\">{{plantInfo.name}}</h3>\n    <div class=\"img-wrapper\">\n    <img class=\" h-64\" :src=\"require(`@/assets/${plantInfo.type}.png`)\" />\n    </div>\n    <v-card-content>\n  <div>\n    <div class=\"text-center\">\n      <button\n        ref=\"button\"\n        class=\"px-6 py-3 bg-green-500 text-white rounded-lg m-2\"\n        @mouseover=\"startTimer\"\n        @mouseout=\"stopTimer\"\n      >\n        {{ buttonText }}\n      </button>\n      <button\n        class=\"ml-2 px-6 py-3 bg-red-500 text-white rounded-lg m-2\"\n        v-if=\"showTryAgain\"\n        @click=\"resetGame\"\n      >\n        Try Again\n      </button>\n      <button\n        ref=\"button\"\n        class=\"px-6 py-3 bg-green-500 text-white rounded-lg m-2\"\n        v-if=\"showButtonPlaceAPlant\"\n      >\n        Place a plant\n      </button>\n\n    </div>\n\n  </div>\n    </v-card-content>\n    </div>\n\n    </v-card>\n</template>\n<script>\n\nimport { defineComponent, ref, reactive, computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\n\n\nexport default defineComponent({\n\n  setup() {\n    // plant info\n    const route = useRoute();\n    const store = useStore();\n\n    const plantType = route.params.type;\n    \n    const plantInfo = store.state.typesPlants.find(item => item.type === plantType);\n\n    // timer functionality \n    const buttonRef = ref(null);\n    const timeLeft = reactive({ value: plantInfo.growingTime });\n    const timer = ref(null);\n    const gameState = reactive({\n      started: false,\n      finished: false,\n      won: false,\n    });\n    const message = ref('');\n    const showMessage = ref(false);\n\n    const startTimer = () => {\n      if (!gameState.started) {\n        gameState.started = true;\n        timer.value = setInterval(() => {\n          timeLeft.value--;\n          if (timeLeft.value === 0) {\n            clearInterval(timer.value);\n            gameState.finished = true;\n            gameState.won = true;\n          }\n        }, 1000);\n      }\n    };\n\n    const stopTimer = () => {\n      if (gameState.started && !gameState.finished) {\n        clearInterval(timer.value);\n        gameState.finished = true;\n        gameState.won = false;\n      }\n    };\n\n    const resetGame = () => {\n      timeLeft.value = plantInfo.growingTime;\n      gameState.started = false;\n      gameState.finished = false;\n      gameState.won = false;\n    };\n\n    const buttonText = computed(() => {\n      if (gameState.finished) {\n        return gameState.won ? 'You win!' : 'You lose!';\n      }\n      return gameState.started ? `${timeLeft.value} seconds left` : 'Move cursor to start';\n    });\n\n    const showTryAgain = computed(() => {\n      return gameState.finished && !gameState.won;\n    });\n\n    const showButtonPlaceAPlant = computed(() => {\n      return gameState.finished && gameState.won;\n    });\n   \n\n    return { \n      plantInfo, \n      plantType, \n      buttonRef,\n      buttonText,\n      showTryAgain,\n      showButtonPlaceAPlant,\n      startTimer,\n      stopTimer,\n      resetGame,\n      message,\n      showMessage,\n    };\n  },\n}) \n\n</script>\n<style scoped>\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}