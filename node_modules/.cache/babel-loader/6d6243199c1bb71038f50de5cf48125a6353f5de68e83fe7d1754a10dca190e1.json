{"ast":null,"code":"import { defineComponent, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\nexport default defineComponent({\n  setup() {\n    // plant info\n    const route = useRoute();\n    const store = useStore();\n    const plantType = route.params.type;\n    const plantInfo = store.state.typesPlants.find(item => item.type === plantType);\n\n    // timer functionality \n    const timeLimit = 3; // in seconds\n    let timeoutId = null;\n    const state = ref({\n      gameStarted: false,\n      gameEnded: false,\n      timeElapsed: 0\n    });\n    const buttonText = ref(\"Start\");\n    const message = ref(\"\");\n    const showTryAgainButton = ref(false);\n    const handleMouseOver = () => {\n      if (!state.value.gameStarted) {\n        state.value.gameStarted = true;\n        buttonText.value = \"Don't leave me!\";\n        timeoutId = setTimeout(() => {\n          state.value.gameEnded = true;\n          message.value = \"You win!\";\n          buttonText.value = \"Start\";\n          clearTimeout(timeoutId);\n        }, timeLimit * 1000);\n      }\n    };\n    const handleMouseOut = () => {\n      if (state.value.gameStarted && !state.value.gameEnded) {\n        state.value.gameStarted = false;\n        state.value.timeElapsed = 0;\n        message.value = \"You lose!\";\n        showTryAgainButton.value = true;\n        clearTimeout(timeoutId);\n      }\n    };\n    const resetGame = () => {\n      state.value.gameStarted = false;\n      state.value.gameEnded = false;\n      state.value.timeElapsed = 0;\n      message.value = \"\";\n      showTryAgainButton.value = false;\n      buttonText.value = \"Start\";\n    };\n    return {\n      plantInfo,\n      plantType,\n      buttonText,\n      message,\n      showTryAgainButton,\n      handleMouseOver,\n      handleMouseOut,\n      resetGame\n    };\n  }\n});","map":{"version":3,"mappings":"AAqCA,SAASA,eAAe,EAAEC,GAAE,QAAS,KAAK;AAC1C,SAASC,QAAO,QAAS,YAAY;AACrC,SAASC,QAAO,QAAS,MAAM;AAG/B,eAAeH,eAAe,CAAC;EAE7BI,KAAK,GAAG;IACN;IACA,MAAMC,KAAI,GAAIH,QAAQ,EAAE;IACxB,MAAMI,KAAI,GAAIH,QAAQ,EAAE;IAExB,MAAMI,SAAQ,GAAIF,KAAK,CAACG,MAAM,CAACC,IAAI;IAEnC,MAAMC,SAAQ,GAAIJ,KAAK,CAACK,KAAK,CAACC,WAAW,CAACC,IAAI,CAACC,IAAG,IAAKA,IAAI,CAACL,IAAG,KAAMF,SAAS,CAAC;;IAE/E;IACA,MAAMQ,SAAQ,GAAI,CAAC,EAAE;IACrB,IAAIC,SAAQ,GAAI,IAAI;IAEpB,MAAML,KAAI,GAAIV,GAAG,CAAC;MAChBgB,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,KAAK;MAChBC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,MAAMC,UAAS,GAAInB,GAAG,CAAC,OAAO,CAAC;IAC/B,MAAMoB,OAAM,GAAIpB,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMqB,kBAAiB,GAAIrB,GAAG,CAAC,KAAK,CAAC;IAErC,MAAMsB,eAAc,GAAI,MAAM;MAC5B,IAAI,CAACZ,KAAK,CAACa,KAAK,CAACP,WAAW,EAAE;QAC5BN,KAAK,CAACa,KAAK,CAACP,WAAU,GAAI,IAAI;QAC9BG,UAAU,CAACI,KAAI,GAAI,iBAAiB;QACpCR,SAAQ,GAAIS,UAAU,CAAC,MAAM;UAC3Bd,KAAK,CAACa,KAAK,CAACN,SAAQ,GAAI,IAAI;UAC5BG,OAAO,CAACG,KAAI,GAAI,UAAU;UAC1BJ,UAAU,CAACI,KAAI,GAAI,OAAO;UAC1BE,YAAY,CAACV,SAAS,CAAC;QACzB,CAAC,EAAED,SAAQ,GAAI,IAAI,CAAC;MACtB;IACF,CAAC;IAED,MAAMY,cAAa,GAAI,MAAM;MAC3B,IAAIhB,KAAK,CAACa,KAAK,CAACP,WAAU,IAAK,CAACN,KAAK,CAACa,KAAK,CAACN,SAAS,EAAE;QACrDP,KAAK,CAACa,KAAK,CAACP,WAAU,GAAI,KAAK;QAC/BN,KAAK,CAACa,KAAK,CAACL,WAAU,GAAI,CAAC;QAC3BE,OAAO,CAACG,KAAI,GAAI,WAAW;QAC3BF,kBAAkB,CAACE,KAAI,GAAI,IAAI;QAC/BE,YAAY,CAACV,SAAS,CAAC;MACzB;IACF,CAAC;IAED,MAAMY,SAAQ,GAAI,MAAM;MACtBjB,KAAK,CAACa,KAAK,CAACP,WAAU,GAAI,KAAK;MAC/BN,KAAK,CAACa,KAAK,CAACN,SAAQ,GAAI,KAAK;MAC7BP,KAAK,CAACa,KAAK,CAACL,WAAU,GAAI,CAAC;MAC3BE,OAAO,CAACG,KAAI,GAAI,EAAE;MAClBF,kBAAkB,CAACE,KAAI,GAAI,KAAK;MAChCJ,UAAU,CAACI,KAAI,GAAI,OAAO;IAC5B,CAAC;IAGD,OAAO;MACLd,SAAS;MACTH,SAAS;MACTa,UAAU;MACVC,OAAO;MACPC,kBAAkB;MAClBC,eAAe;MACfI,cAAc;MACdC;IACF,CAAC;EACH;AACF,CAAC","names":["defineComponent","ref","useRoute","useStore","setup","route","store","plantType","params","type","plantInfo","state","typesPlants","find","item","timeLimit","timeoutId","gameStarted","gameEnded","timeElapsed","buttonText","message","showTryAgainButton","handleMouseOver","value","setTimeout","clearTimeout","handleMouseOut","resetGame"],"sourceRoot":"","sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/components/pages/GrowSpot.vue"],"sourcesContent":["<template>\n    <v-card     \n    class=\"mx-auto my-10 \"\n    max-width=\"600\"\n    >\n    <div class=\"container grid grid-cols-1 gap-4  justify-items-center\">\n    <h3 class=\"\">{{plantInfo.name}}</h3>\n    <div class=\"img-wrapper\">\n    <img class=\" h-64\" :src=\"require(`@/assets/${plantInfo.type}.png`)\" />\n    </div>\n    <v-card-content>\n    <div class=\"text-center mt-10\">\n    <button\n      ref=\"startButton\"\n      class=\"p-5 font-mono text-black font-bold border-4 border-solid bg-lime-400 border-lime-600 rounded-md cursor-pointer\"\n      @mouseover=\"handleMouseOver\"\n      @mouseout=\"handleMouseOut\"\n    >\n      {{ buttonText }}\n    </button>\n    <div class=\"mt-4\">{{ message }}</div>\n    <div v-if=\"showTryAgainButton\" class=\"mt-4\">\n      <button\n        class=\"p-2 font-mono text-black font-bold border-2 border-solid bg-gray-200 border-gray-400 rounded-md cursor-pointer\"\n        @click=\"resetGame\"\n      >\n        Try again\n      </button>\n    </div>\n    </div>\n    </v-card-content>\n    </div>\n\n    </v-card>\n</template>\n<script>\n\nimport { defineComponent, ref } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { useStore } from 'vuex';\n\n\nexport default defineComponent({\n\n  setup() {\n    // plant info\n    const route = useRoute();\n    const store = useStore();\n\n    const plantType = route.params.type;\n    \n    const plantInfo = store.state.typesPlants.find(item => item.type === plantType);\n\n    // timer functionality \n    const timeLimit = 3; // in seconds\n    let timeoutId = null;\n\n    const state = ref({\n      gameStarted: false,\n      gameEnded: false,\n      timeElapsed: 0,\n    });\n\n    const buttonText = ref(\"Start\");\n    const message = ref(\"\");\n    const showTryAgainButton = ref(false);\n\n    const handleMouseOver = () => {\n      if (!state.value.gameStarted) {\n        state.value.gameStarted = true;\n        buttonText.value = \"Don't leave me!\";\n        timeoutId = setTimeout(() => {\n          state.value.gameEnded = true;\n          message.value = \"You win!\";\n          buttonText.value = \"Start\";\n          clearTimeout(timeoutId);\n        }, timeLimit * 1000);\n      }\n    };\n\n    const handleMouseOut = () => {\n      if (state.value.gameStarted && !state.value.gameEnded) {\n        state.value.gameStarted = false;\n        state.value.timeElapsed = 0;\n        message.value = \"You lose!\";\n        showTryAgainButton.value = true;\n        clearTimeout(timeoutId);\n      }\n    };\n\n    const resetGame = () => {\n      state.value.gameStarted = false;\n      state.value.gameEnded = false;\n      state.value.timeElapsed = 0;\n      message.value = \"\";\n      showTryAgainButton.value = false;\n      buttonText.value = \"Start\";\n    };\n   \n\n    return { \n      plantInfo, \n      plantType, \n      buttonText,\n      message,\n      showTryAgainButton,\n      handleMouseOver,\n      handleMouseOut,\n      resetGame,\n    };\n  },\n}) \n\n</script>\n<style scoped>\n    \n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}