{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"header\"\n}, \"My Garden\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ButtonField = _resolveComponent(\"ButtonField\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.fields, (field, fieldIndex) => {\n    return _openBlock(), _createBlock(_component_ButtonField, {\n      key: fieldIndex,\n      idx: fieldIndex + 1,\n      type: field.type\n    }, null, 8 /* PROPS */, [\"idx\", \"type\"]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"button\", {\n    disabled: !_ctx.canGrow,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.growNew && _ctx.growNew(...args))\n  }, \"Grow new\", 8 /* PROPS */, _hoisted_2)]);\n}","map":{"version":3,"mappings":";gCAEIA,oBAAyC;EAAjCC,KAAK,EAAC;AAAQ,GAAC,WAAS;;;;uBADlCC,oBAMM,cALJC,UAAyC,EACzCH,oBAEQ,mCADJE,oBAA8GE,6BAAnEC,WAAM,GAA5BC,KAAK,EAAEC,UAAU;yBAAtCC,aAA8GC;MAA1DC,GAAG,EAAEH,UAAU;MAAGI,GAAG,EAAEJ,UAAU;MAAKK,IAAI,EAAEN,KAAK,CAACM;;oCAE1GZ,oBAA+D;IAAtDa,QAAQ,GAAGR,YAAO;IAAGS,OAAK,yCAAET,qCAAO;KAAE,UAAQ","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_Fragment","_ctx","field","fieldIndex","_createBlock","_component_ButtonField","key","idx","type","disabled","onClick"],"sourceRoot":"","sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/components/pages/MainGarden.vue"],"sourcesContent":["<template>\n  <div>\n    <header class=\"header\">My Garden</header>\n    <table>\n        <ButtonField v-for=\"(field, fieldIndex) in fields\" :key=\"fieldIndex\" :idx=\"fieldIndex+1\" :type=\"field.type\" />\n    </table>\n    <button :disabled=\"!canGrow\" @click=\"growNew\">Grow new</button>\n  </div>\n</template>\n\n<script>\nimport { computed, defineComponent } from 'vue';\nimport { useStore } from 'vuex'; \nimport ButtonField from '../common/ButtonField.vue';\n\n\nexport default defineComponent({\n  components: {ButtonField},\n  setup() {\n    const store = useStore();\n\n    const fields = computed(() => store.state.fields);\n\n    const resetField = (fieldIndex) => {\n      store.commit('resetField', { fieldIndex });\n    };\n\n    const canGrow = computed(() => {\n      return fields.value.some(field => field.type !== 'empty');\n    });\n\n    const growNew = () => {\n      console.log('hello');\n    };\n\n    return { fields, resetField, canGrow, growNew };\n  }\n});\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}