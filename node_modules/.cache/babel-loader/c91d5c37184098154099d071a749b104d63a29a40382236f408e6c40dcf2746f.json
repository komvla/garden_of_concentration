{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state() {\n    return {\n      coins: 0,\n      // account of user of coins for buy features and skins in app shop \n      fields: [{\n        type: 'flower'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'cactus'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'bush'\n      }, {\n        type: 'bush'\n      }, {\n        type: 'flower'\n      }, {\n        type: 'tree'\n      }, {\n        type: 'flower'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'cactus'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'empty'\n      }, {\n        type: 'empty'\n      }],\n      typesPlants: [{\n        name: 'Flower',\n        type: 'flower',\n        growingTime: 10,\n        price: 10\n      }, {\n        name: 'Bush',\n        type: 'bush',\n        growingTime: 600,\n        price: 60\n      }, {\n        name: 'Cactus',\n        type: 'cactus',\n        growingTime: 3600,\n        price: 360\n      }, {\n        name: 'Big Plant',\n        type: 'tree',\n        growingTime: 3600 * 4,\n        price: 360 * 4\n      }]\n    };\n  },\n  mutations: {\n    resetField(state, {\n      fieldIndex\n    }) {\n      state.fields[fieldIndex] = {\n        type: 'empty'\n      };\n    },\n    editField(state, {\n      fieldIndex,\n      type\n    }) {\n      state.fields[fieldIndex] = {\n        type\n      };\n    }\n    // sellPlant(state, { rowIndex, fieldIndex,  type }) { \n    //     // future functionality for sell plants grown by the user\n    // }\n  },\n\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","coins","fields","type","typesPlants","name","growingTime","price","mutations","resetField","fieldIndex","editField","actions","modules"],"sources":["/home/vlad/Escritorio/Programming/garden_of_concentration/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\n\nexport default createStore({\n  state() {\n    return {\n      coins: 0, // account of user of coins for buy features and skins in app shop \n      fields: [\n          { type: 'flower' },\n          { type: 'empty' },\n          { type: 'cactus' },\n          { type: 'empty' },\n          { type: 'bush' },\n          { type: 'bush' },\n          { type: 'flower' },\n          { type: 'tree' },\n          { type: 'flower' },\n          { type: 'empty' },\n          { type: 'cactus' },\n          { type: 'empty' },\n          { type: 'empty' },\n          { type: 'empty' },\n          { type: 'empty' },\n          { type: 'empty' }\n      ],\n      typesPlants : [\n        { name: 'Flower', type: 'flower', growingTime : 10, price : 10 },\n        { name: 'Bush', type: 'bush', growingTime : 600, price : 60 },\n        { name: 'Cactus', type: 'cactus', growingTime : 3600, price : 360 },\n        { name: 'Big Plant',  type: 'tree', growingTime : 3600*4, price : 360*4  },\n      ]\n    };\n  },\n  mutations: {\n    resetField(state, { fieldIndex }) {\n      state.fields[fieldIndex] = { type: 'empty' };\n    },\n    editField(state, { fieldIndex, type }) {\n      state.fields[fieldIndex] = { type };\n    },\n    // sellPlant(state, { rowIndex, fieldIndex,  type }) { \n    //     // future functionality for sell plants grown by the user\n    // }\n  },\n  actions: {},\n  modules: {}\n});"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,GAAG;IACN,OAAO;MACLC,KAAK,EAAE,CAAC;MAAE;MACVC,MAAM,EAAE,CACJ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAS,CAAC,EAClB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAO,CAAC,EAChB;QAAEA,IAAI,EAAE;MAAO,CAAC,EAChB;QAAEA,IAAI,EAAE;MAAS,CAAC,EAClB;QAAEA,IAAI,EAAE;MAAO,CAAC,EAChB;QAAEA,IAAI,EAAE;MAAS,CAAC,EAClB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAS,CAAC,EAClB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAQ,CAAC,EACjB;QAAEA,IAAI,EAAE;MAAQ,CAAC,CACpB;MACDC,WAAW,EAAG,CACZ;QAAEC,IAAI,EAAE,QAAQ;QAAEF,IAAI,EAAE,QAAQ;QAAEG,WAAW,EAAG,EAAE;QAAEC,KAAK,EAAG;MAAG,CAAC,EAChE;QAAEF,IAAI,EAAE,MAAM;QAAEF,IAAI,EAAE,MAAM;QAAEG,WAAW,EAAG,GAAG;QAAEC,KAAK,EAAG;MAAG,CAAC,EAC7D;QAAEF,IAAI,EAAE,QAAQ;QAAEF,IAAI,EAAE,QAAQ;QAAEG,WAAW,EAAG,IAAI;QAAEC,KAAK,EAAG;MAAI,CAAC,EACnE;QAAEF,IAAI,EAAE,WAAW;QAAGF,IAAI,EAAE,MAAM;QAAEG,WAAW,EAAG,IAAI,GAAC,CAAC;QAAEC,KAAK,EAAG,GAAG,GAAC;MAAG,CAAC;IAE9E,CAAC;EACH,CAAC;EACDC,SAAS,EAAE;IACTC,UAAU,CAACT,KAAK,EAAE;MAAEU;IAAW,CAAC,EAAE;MAChCV,KAAK,CAACE,MAAM,CAACQ,UAAU,CAAC,GAAG;QAAEP,IAAI,EAAE;MAAQ,CAAC;IAC9C,CAAC;IACDQ,SAAS,CAACX,KAAK,EAAE;MAAEU,UAAU;MAAEP;IAAK,CAAC,EAAE;MACrCH,KAAK,CAACE,MAAM,CAACQ,UAAU,CAAC,GAAG;QAAEP;MAAK,CAAC;IACrC;IACA;IACA;IACA;EACF,CAAC;;EACDS,OAAO,EAAE,CAAC,CAAC;EACXC,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}